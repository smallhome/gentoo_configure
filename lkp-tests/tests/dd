#!/bin/sh
# - runtime
# - bs

## Copy a file, converting and formatting according to the operands.

[ -n "$mount_points" ] || { echo "empty mount_points, disk failed?" >&2; exit; }

: ${runtime:=600}
[ -n "$bs" ] && opt_bs="bs=$bs"

t=$(date +%s)

files=
pid=
for i in $(seq ${nr_threads:-1})
do
	for mnt in $mount_points
	do
		file=$mnt/zero-$i
		files="$files $file "
		rm -f $file
		note "dd $opt_bs if=/dev/zero of=$file status=noxfer &"
		timeout -s KILL $runtime  dd $opt_bs if=/dev/zero of=$file status=noxfer &
		[ -n "$BASH_VERSION" ] && disown
		pid="${pid} $!"
	done
done

ps aux | grep dd
echo $pid > $TMP/pid-dd

tt=$(date +%s)
startup_time=$((tt - t))
echo "startup_time: $startup_time"

cmd sleep $((runtime > startup_time ? runtime - startup_time : 0))

t=$(date +%s)
pkill -9 --exact dd --pidfile $TMP/pid-dd
note killall -9 dd
pkill -9 --exact dd --pidfile $TMP/pid-dd
pkill -9 --exact dd --pidfile $TMP/pid-dd
tt=$(date +%s)
echo "kill_time: $((tt - t))"

chown lkp.lkp $TMP/pid-dd
mv $TMP/pid-dd  $RESULT_ROOT/pid
ls -li $files > $RESULT_ROOT/ls-files
truncate --size=0 $files
rm -f $files

t=$(date +%s)
echo "rm_time: $((t - tt))"
