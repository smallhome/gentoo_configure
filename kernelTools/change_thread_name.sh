#!/bin/bash
# change_thread_name
# Author: Lucas De Marchi
#

print_usage () {
cat - << EOF
USAGE
	change_thread_name lookup_file trace_file [orig_name]

PARAMETERS
	lookup_file	file with two columns separated by blanks
			first column is the name of the process
			second column is the correspondent PID
			if "-" is given it will read the stdin.
			Either the stdin or the file must finish
			in a line with "----".
	
	trace_file	file with the trace generated by sched_switch
			tracer of ftrace
			if "-" is given it will read the stdin
	
	orig_name	Parameter with the common name of all threads,
			i.e., the process name [FOR FUTURE USE]

EXAMPLES
	Both arguments are files (lookup must end in a line with "----"):
		$ change_thread_names.sh lookup tracing-demo.txt
	
	Name and pid of the threads are inside a log file (in the right format):
		$ (grep my_thread_name run.log; echo "----"; cat tracing.txt) |
			change_thread_names.sh - -

	Get the input directly from ftrace
		$ echo -e "wave0\nwave1\n----" |
			change_thread_names.sh - /debugfs/tracing/trace
	
	Get the input directly from ftrace and also keep a copy of the trace
		$ (echo -e "thr1\nthr2\nthr3; echo "----";
			cat /debugfs/tracing/trace | tee tracing.txt) |
			change_thread_names.sh - -
EOF

}

[[ $# -eq 0 || $1 == "-h" || $1 == "--help" ]] && print_usage && exit 0
[[ $# -ne 2 && $# -ne 3 ]] && echo -e "Wrong number of parameters. See USAGE.\n\n${USAGE}" && exit 1


lookup_file=$1
trace_file=$2
orig_name=$3

# Don't need this! It's weird, but cat gives us the desired result
#if [[ "$lookup_file" == "-" && "$trace_file" == "-" ]]; then
#	comm="cat -"
#else
	comm="cat $lookup_file $trace_file"
#fi
 
$comm | awk -v orig_name=$orig_name '
BEGIN{
	mode="lookup"
	padding="                "  #15 blanks
}
{
	if (mode == "processing"){
		#RT task! Columns are different for normal tasks
		#but we dont worry about it
		pid  = substr($4,1,length($4)-1) ""
		task = lookup[pid] ""

		if(task == "") {
			print $0
		}
		else {
			printf(" %s  %s %s\n",
			substr(padding, 1, 15-length(task)) task "-" pid,
			substr($0, 24, 54),
			lookup[substr($8,1,length($8)-1)])
		}
	} else{	
		if($1 == "----")
			mode="processing"
		else{
			if (length($1) > 15){
				print "ERROR: Thread name too long. It must fit 15 chars" > "/dev/stderr"
				exit 1
			}
			lookup[$2 ""]=$1

		}
	}
}
'
